services:
  drawerbackend:
    profiles: ["dev"]
    build:
      context: .
      dockerfile: Dockerfile
      args:
        USE_MOCK_GPIO: "ON"
    volumes:
      - .:/workspace/DrawerBackend
      - ./logs:/logs
    working_dir: /workspace/DrawerBackend
    command: sleep infinity
    devices:
      - "/dev/gpiochip0:/dev/gpiochip0"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  docs_site:

volumes:
  docs_site:

volumes:
  docs_site:
  docs:
    profiles: ["dev"]
    image: squidfunk/mkdocs-material:latest
    volumes:
      - .:/docs
      - ./logs:/logs
    working_dir: /docs
    command: ["serve", "-a", "0.0.0.0:${DOCS_PORT}"]
    ports:
      - "${DOCS_PORT}:${DOCS_PORT}"
    healthcheck:
      test: ["CMD", "python", "-c", "import os,urllib.request; urllib.request.urlopen('http://127.0.0.1:%s/'%os.environ.get('DOCS_PORT','8082'))"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 5s
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
  docs_build:
    profiles: ["prod"]
    image: squidfunk/mkdocs-material:latest
    working_dir: /docs
    volumes:
      - .:/docs
      - docs_site:/docs/site
    command: ["build", "--clean"]
    restart: "no"

  docs_prod:
    profiles: ["prod"]
    image: nginx:alpine
    depends_on:
      docs_build:
        condition: service_completed_successfully
    volumes:
      - docs_site:/usr/share/nginx/html:ro
      - ./packaging/nginx/docs.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "${DOCS_PORT}:80"
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        USE_MOCK_GPIO: "ON"
    environment:
      - LOG_JSON=${LOG_JSON}
      - BIND_ADDR=${BIND_ADDR}
    command: ["./build/register_mvp", "--api", "${API_PORT}"]
    ports:
      - "${API_PORT}:${API_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:${API_PORT}/status >/dev/null || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    # To use real GPIO, set USE_MOCK_GPIO to OFF and uncomment the device mapping below
    # devices:
    #   - "/dev/gpiochip0:/dev/gpiochip0"
    restart: unless-stopped
    volumes:
      - ./logs:/logs
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
  pos:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        USE_MOCK_GPIO: "ON"
    environment:
      - LOG_JSON=${LOG_JSON}
      - BIND_ADDR=${BIND_ADDR}
    command: ["./build/register_mvp", "--pos-http", "${POS_PORT}"]
    ports:
      - "${POS_PORT}:${POS_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:${POS_PORT}/ping >/dev/null || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    # devices:
    #   - "/dev/gpiochip0:/dev/gpiochip0"
    restart: unless-stopped
    volumes:
      - ./logs:/logs
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  api_tui:
    profiles: ["dev"]
    build:
      context: .
      dockerfile: Dockerfile
      args:
        USE_MOCK_GPIO: "ON"
    environment:
      - LOG_JSON=${LOG_JSON}
      - BIND_ADDR=${BIND_ADDR}
    command: ["./build/register_mvp", "--api", "${API_TUI_PORT}", "--tui"]
    ports:
      - "${API_TUI_PORT}:${API_TUI_PORT}"
    tty: true
    stdin_open: true
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:${API_TUI_PORT}/status >/dev/null || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 15s
    restart: unless-stopped
    volumes:
      - ./logs:/logs
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
