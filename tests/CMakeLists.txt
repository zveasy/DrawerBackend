cmake_minimum_required(VERSION 3.16)
project(register_mvp_tests LANGUAGES CXX)

include(CTest)
include(FetchContent)

FetchContent_Declare(
  googletest
  URL https://github.com/google/googletest/archive/refs/tags/v1.14.0.zip
)
FetchContent_MakeAvailable(googletest)
include(GoogleTest)

add_executable(hal_mock_test hal_mock_test.cpp ../hal/gpio_mock.cpp ../util/log.cpp)
target_include_directories(hal_mock_test PRIVATE ..)
target_compile_features(hal_mock_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(hal_mock_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(hal_mock_test gtest_main)

gtest_discover_tests(hal_mock_test)

add_executable(sim_script_test sim_script_test.cpp ../sim/sim.cpp ../util/log.cpp)
target_include_directories(sim_script_test PRIVATE ..)
target_compile_features(sim_script_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(sim_script_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(sim_script_test gtest_main)

gtest_discover_tests(sim_script_test)


add_executable(shutter_homing_test shutter_homing_test.cpp)
target_include_directories(shutter_homing_test PRIVATE .. ../src)
target_compile_features(shutter_homing_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(shutter_homing_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(shutter_homing_test gtest_main drivers app hal util)
gtest_discover_tests(shutter_homing_test)

add_executable(shutter_fault_test shutter_fault_test.cpp)
target_include_directories(shutter_fault_test PRIVATE .. ../src)
target_compile_features(shutter_fault_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(shutter_fault_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(shutter_fault_test gtest_main drivers app hal util)
gtest_discover_tests(shutter_fault_test)

add_executable(hopper_dispense_test hopper_dispense_test.cpp)
target_include_directories(hopper_dispense_test PRIVATE .. ../src)
target_compile_features(hopper_dispense_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(hopper_dispense_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(hopper_dispense_test gtest_main drivers app hal util)
gtest_discover_tests(hopper_dispense_test)

add_executable(hopper_jam_test hopper_jam_test.cpp)
target_include_directories(hopper_jam_test PRIVATE .. ../src)
target_compile_features(hopper_jam_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(hopper_jam_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(hopper_jam_test gtest_main drivers app hal util)
gtest_discover_tests(hopper_jam_test)

add_executable(hopper_noise_test hopper_noise_test.cpp)
target_include_directories(hopper_noise_test PRIVATE .. ../src)
target_compile_features(hopper_noise_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(hopper_noise_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(hopper_noise_test gtest_main drivers app hal util)
gtest_discover_tests(hopper_noise_test)

add_executable(audit_tolerance_test audit_tolerance_test.cpp)
target_include_directories(audit_tolerance_test PRIVATE .. ../src)
target_compile_features(audit_tolerance_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(audit_tolerance_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(audit_tolerance_test gtest_main app drivers hal util)
gtest_discover_tests(audit_tolerance_test)

add_executable(audit_sensor_stuck_test audit_sensor_stuck_test.cpp)
target_include_directories(audit_sensor_stuck_test PRIVATE .. ../src)
target_compile_features(audit_sensor_stuck_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(audit_sensor_stuck_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(audit_sensor_stuck_test gtest_main app drivers hal util)
gtest_discover_tests(audit_sensor_stuck_test)

add_executable(audit_skip_test audit_skip_test.cpp)
target_include_directories(audit_skip_test PRIVATE .. ../src)
target_compile_features(audit_skip_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(audit_skip_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(audit_skip_test gtest_main app drivers hal util)
gtest_discover_tests(audit_skip_test)

add_executable(txn_change_table_test txn_change_table_test.cpp)
target_include_directories(txn_change_table_test PRIVATE .. ../src)
target_compile_features(txn_change_table_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(txn_change_table_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(txn_change_table_test gtest_main app drivers hal util)
gtest_discover_tests(txn_change_table_test)

add_executable(txn_recovery_resume_test txn_recovery_resume_test.cpp)
target_include_directories(txn_recovery_resume_test PRIVATE .. ../src)
target_compile_features(txn_recovery_resume_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(txn_recovery_resume_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(txn_recovery_resume_test gtest_main app drivers hal util)
gtest_discover_tests(txn_recovery_resume_test)

add_executable(txn_recovery_void_test txn_recovery_void_test.cpp)
target_include_directories(txn_recovery_void_test PRIVATE .. ../src)
target_compile_features(txn_recovery_void_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(txn_recovery_void_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(txn_recovery_void_test gtest_main app drivers hal util)
gtest_discover_tests(txn_recovery_void_test)

add_executable(config_defaults_test config_defaults_test.cpp)
target_include_directories(config_defaults_test PRIVATE .. ../src)
target_compile_features(config_defaults_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(config_defaults_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(config_defaults_test gtest_main cfg)
gtest_discover_tests(config_defaults_test)

add_executable(selftest_pass_fail_test selftest_pass_fail_test.cpp)
target_include_directories(selftest_pass_fail_test PRIVATE .. ../src)
target_compile_features(selftest_pass_fail_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(selftest_pass_fail_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(selftest_pass_fail_test gtest_main app drivers hal util cfg)
gtest_discover_tests(selftest_pass_fail_test)

add_executable(http_handlers_test http_handlers_test.cpp)
target_include_directories(http_handlers_test PRIVATE .. ../src)
target_compile_features(http_handlers_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(http_handlers_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(http_handlers_test gtest_main app drivers hal util server)
gtest_discover_tests(http_handlers_test)

add_executable(help_endpoint_serves_docs_test help_endpoint_serves_docs_test.cpp)
target_include_directories(help_endpoint_serves_docs_test PRIVATE .. ../src)
target_compile_features(help_endpoint_serves_docs_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(help_endpoint_serves_docs_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(help_endpoint_serves_docs_test gtest_main app drivers hal util server)
gtest_discover_tests(help_endpoint_serves_docs_test)

add_executable(compliance_mode_flags_test compliance_mode_flags_test.cpp)
target_include_directories(compliance_mode_flags_test PRIVATE .. ../src)
target_compile_features(compliance_mode_flags_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(compliance_mode_flags_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(compliance_mode_flags_test gtest_main app drivers hal util safety compliance)
gtest_discover_tests(compliance_mode_flags_test)

add_test(NAME power_budget_script_test COMMAND bash ${CMAKE_CURRENT_SOURCE_DIR}/power_budget_script_test.sh WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})

add_test(NAME smoke_store_demo_script_test COMMAND bash ${CMAKE_CURRENT_SOURCE_DIR}/smoke_store_demo_script_test.sh WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})

add_executable(http_concurrency_test http_concurrency_test.cpp)
target_include_directories(http_concurrency_test PRIVATE .. ../src)
target_compile_features(http_concurrency_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(http_concurrency_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(http_concurrency_test gtest_main app drivers hal util server)
gtest_discover_tests(http_concurrency_test)

add_executable(pos_idempotency_basic_test pos_idempotency_basic_test.cpp)
target_include_directories(pos_idempotency_basic_test PRIVATE .. ../src)
target_compile_features(pos_idempotency_basic_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(pos_idempotency_basic_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(pos_idempotency_basic_test gtest_main pos)
gtest_discover_tests(pos_idempotency_basic_test)

add_executable(pos_idempotency_payload_mismatch_test pos_idempotency_payload_mismatch_test.cpp)
target_include_directories(pos_idempotency_payload_mismatch_test PRIVATE .. ../src)
target_compile_features(pos_idempotency_payload_mismatch_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(pos_idempotency_payload_mismatch_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(pos_idempotency_payload_mismatch_test gtest_main pos)
gtest_discover_tests(pos_idempotency_payload_mismatch_test)

add_executable(pos_idempotency_race_test pos_idempotency_race_test.cpp)
target_include_directories(pos_idempotency_race_test PRIVATE .. ../src)
target_compile_features(pos_idempotency_race_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(pos_idempotency_race_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(pos_idempotency_race_test gtest_main pos)
gtest_discover_tests(pos_idempotency_race_test)

add_executable(pos_vendor_mapping_test pos_vendor_mapping_test.cpp)
target_include_directories(pos_vendor_mapping_test PRIVATE .. ../src)
target_compile_features(pos_vendor_mapping_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(pos_vendor_mapping_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(pos_vendor_mapping_test gtest_main pos)
gtest_discover_tests(pos_vendor_mapping_test)

add_executable(pos_http_contract_test pos_http_contract_test.cpp)
target_include_directories(pos_http_contract_test PRIVATE .. ../src)
target_compile_features(pos_http_contract_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(pos_http_contract_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(pos_http_contract_test gtest_main pos)
gtest_discover_tests(pos_http_contract_test)

add_executable(pos_serial_contract_test pos_serial_contract_test.cpp)
target_include_directories(pos_serial_contract_test PRIVATE .. ../src)
target_compile_features(pos_serial_contract_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(pos_serial_contract_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(pos_serial_contract_test gtest_main pos)
gtest_discover_tests(pos_serial_contract_test)

add_executable(iot_queue_reconnect_test iot_queue_reconnect_test.cpp)
target_include_directories(iot_queue_reconnect_test PRIVATE .. ../src)
target_compile_features(iot_queue_reconnect_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(iot_queue_reconnect_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(iot_queue_reconnect_test gtest_main cloud util)
gtest_discover_tests(iot_queue_reconnect_test)

add_executable(iot_shadow_update_test iot_shadow_update_test.cpp)
target_include_directories(iot_shadow_update_test PRIVATE .. ../src)
target_compile_features(iot_shadow_update_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(iot_shadow_update_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(iot_shadow_update_test gtest_main cloud util cfg)
gtest_discover_tests(iot_shadow_update_test)

add_executable(change_maker_table_test change_maker_table_test.cpp)
target_include_directories(change_maker_table_test PRIVATE .. ../src)
target_compile_features(change_maker_table_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(change_maker_table_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(change_maker_table_test gtest_main app drivers hal util)
gtest_discover_tests(change_maker_table_test)

add_executable(low_stock_fallback_test low_stock_fallback_test.cpp)
target_include_directories(low_stock_fallback_test PRIVATE .. ../src)
target_compile_features(low_stock_fallback_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(low_stock_fallback_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(low_stock_fallback_test gtest_main app drivers hal util)
gtest_discover_tests(low_stock_fallback_test)

add_executable(multi_hopper_integration_test multi_hopper_integration_test.cpp)
target_include_directories(multi_hopper_integration_test PRIVATE .. ../src)
target_compile_features(multi_hopper_integration_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(multi_hopper_integration_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(multi_hopper_integration_test gtest_main app drivers hal util)
gtest_discover_tests(multi_hopper_integration_test)

add_executable(tamper_mid_txn_test tamper_mid_txn_test.cpp)
target_include_directories(tamper_mid_txn_test PRIVATE .. ../src)
target_compile_features(tamper_mid_txn_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(tamper_mid_txn_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(tamper_mid_txn_test gtest_main app drivers hal util)
gtest_discover_tests(tamper_mid_txn_test)

add_executable(jam_clear_retry_test jam_clear_retry_test.cpp)
target_include_directories(jam_clear_retry_test PRIVATE .. ../src)
target_compile_features(jam_clear_retry_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(jam_clear_retry_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(jam_clear_retry_test gtest_main app drivers hal util)
gtest_discover_tests(jam_clear_retry_test)


add_executable(metrics_counters_test metrics_counters_test.cpp)
target_include_directories(metrics_counters_test PRIVATE .. ../src)
target_compile_features(metrics_counters_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(metrics_counters_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(metrics_counters_test gtest_main obs util)
gtest_discover_tests(metrics_counters_test)

add_executable(metrics_histogram_test metrics_histogram_test.cpp)
target_include_directories(metrics_histogram_test PRIVATE .. ../src)
target_compile_features(metrics_histogram_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(metrics_histogram_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(metrics_histogram_test gtest_main obs)
gtest_discover_tests(metrics_histogram_test)

add_executable(metrics_http_test metrics_http_test.cpp)
target_include_directories(metrics_http_test PRIVATE .. ../src)
target_compile_features(metrics_http_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(metrics_http_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(metrics_http_test gtest_main obs)
gtest_discover_tests(metrics_http_test)

add_executable(tls_identity_load_test tls_identity_load_test.cpp)
target_include_directories(tls_identity_load_test PRIVATE .. ../src)
target_compile_features(tls_identity_load_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(tls_identity_load_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(tls_identity_load_test gtest_main cloud cfg util)
gtest_discover_tests(tls_identity_load_test)

add_executable(identity_fallback_test identity_fallback_test.cpp)
target_include_directories(identity_fallback_test PRIVATE .. ../src)
target_compile_features(identity_fallback_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(identity_fallback_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(identity_fallback_test gtest_main cloud cfg)
gtest_discover_tests(identity_fallback_test)

add_executable(systemd_hardening_unit_test systemd_hardening_unit_test.cpp)
target_compile_features(systemd_hardening_unit_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(systemd_hardening_unit_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(systemd_hardening_unit_test gtest_main)
gtest_discover_tests(systemd_hardening_unit_test)

add_executable(firewall_bind_localhost_test firewall_bind_localhost_test.cpp)
target_include_directories(firewall_bind_localhost_test PRIVATE .. ../src)
target_compile_features(firewall_bind_localhost_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(firewall_bind_localhost_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(firewall_bind_localhost_test gtest_main server app drivers hal util)
gtest_discover_tests(firewall_bind_localhost_test)

add_executable(rotation_reload_test rotation_reload_test.cpp)
target_include_directories(rotation_reload_test PRIVATE .. ../src)
target_compile_features(rotation_reload_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(rotation_reload_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(rotation_reload_test gtest_main cloud cfg util)
gtest_discover_tests(rotation_reload_test)

add_executable(ota_sig_verify_test ota_sig_verify_test.cpp)
target_include_directories(ota_sig_verify_test PRIVATE .. ../src)
target_compile_features(ota_sig_verify_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(ota_sig_verify_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(ota_sig_verify_test gtest_main util)
gtest_discover_tests(ota_sig_verify_test)

add_executable(ota_ring_selection_test ota_ring_selection_test.cpp)
target_include_directories(ota_ring_selection_test PRIVATE .. ../src)
target_compile_features(ota_ring_selection_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(ota_ring_selection_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(ota_ring_selection_test gtest_main ota util)
gtest_discover_tests(ota_ring_selection_test)

add_executable(ota_agent_success_flow_test ota_agent_success_flow_test.cpp)
target_include_directories(ota_agent_success_flow_test PRIVATE .. ../src)
target_compile_features(ota_agent_success_flow_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(ota_agent_success_flow_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(ota_agent_success_flow_test gtest_main ota httplib::httplib util cfg)
gtest_discover_tests(ota_agent_success_flow_test)

add_executable(ota_agent_rollback_test ota_agent_rollback_test.cpp)
target_include_directories(ota_agent_rollback_test PRIVATE .. ../src)
target_compile_features(ota_agent_rollback_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(ota_agent_rollback_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(ota_agent_rollback_test gtest_main ota httplib::httplib util cfg)
gtest_discover_tests(ota_agent_rollback_test)

add_executable(eol_runner_success_test eol_runner_success_test.cpp)
target_include_directories(eol_runner_success_test PRIVATE .. ../src)
target_compile_features(eol_runner_success_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(eol_runner_success_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(eol_runner_success_test gtest_main mfg)
gtest_discover_tests(eol_runner_success_test)

add_executable(eol_runner_weight_fail_test eol_runner_weight_fail_test.cpp)
target_include_directories(eol_runner_weight_fail_test PRIVATE .. ../src)
target_compile_features(eol_runner_weight_fail_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(eol_runner_weight_fail_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(eol_runner_weight_fail_test gtest_main mfg)
gtest_discover_tests(eol_runner_weight_fail_test)

add_executable(provision_serial_format_test provision_serial_format_test.cpp)
target_include_directories(provision_serial_format_test PRIVATE .. ../src)
target_compile_features(provision_serial_format_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(provision_serial_format_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(provision_serial_format_test gtest_main mfg)
gtest_discover_tests(provision_serial_format_test)

add_executable(burnin_stops_on_fault_test burnin_stops_on_fault_test.cpp)
target_include_directories(burnin_stops_on_fault_test PRIVATE .. ../src)
target_compile_features(burnin_stops_on_fault_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(burnin_stops_on_fault_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(burnin_stops_on_fault_test gtest_main mfg)
gtest_discover_tests(burnin_stops_on_fault_test)

add_executable(ledger_investable_calc_test ledger_investable_calc_test.cpp)
target_include_directories(ledger_investable_calc_test PRIVATE .. ../src)
target_compile_features(ledger_investable_calc_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(ledger_investable_calc_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(ledger_investable_calc_test gtest_main quant)
gtest_discover_tests(ledger_investable_calc_test)
