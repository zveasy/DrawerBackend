cmake_minimum_required(VERSION 3.16)
project(register_mvp_tests LANGUAGES CXX)

include(CTest)
include(FetchContent)

FetchContent_Declare(
  googletest
  URL https://github.com/google/googletest/archive/refs/tags/v1.14.0.zip
)
FetchContent_MakeAvailable(googletest)
include(GoogleTest)

add_executable(hal_mock_test hal_mock_test.cpp ../hal/gpio_mock.cpp ../util/log.cpp)
target_include_directories(hal_mock_test PRIVATE ..)
target_compile_features(hal_mock_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(hal_mock_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(hal_mock_test gtest_main)

gtest_discover_tests(hal_mock_test)

add_executable(sim_script_test sim_script_test.cpp ../sim/sim.cpp ../util/log.cpp)
target_include_directories(sim_script_test PRIVATE ..)
target_compile_features(sim_script_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(sim_script_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(sim_script_test gtest_main)

gtest_discover_tests(sim_script_test)


add_executable(shutter_homing_test shutter_homing_test.cpp)
target_include_directories(shutter_homing_test PRIVATE .. ../src)
target_compile_features(shutter_homing_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(shutter_homing_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(shutter_homing_test gtest_main drivers app hal util)
gtest_discover_tests(shutter_homing_test)

add_executable(shutter_fault_test shutter_fault_test.cpp)
target_include_directories(shutter_fault_test PRIVATE .. ../src)
target_compile_features(shutter_fault_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(shutter_fault_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(shutter_fault_test gtest_main drivers app hal util)
gtest_discover_tests(shutter_fault_test)

add_executable(hopper_dispense_test hopper_dispense_test.cpp)
target_include_directories(hopper_dispense_test PRIVATE .. ../src)
target_compile_features(hopper_dispense_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(hopper_dispense_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(hopper_dispense_test gtest_main drivers app hal util)
gtest_discover_tests(hopper_dispense_test)

add_executable(hopper_jam_test hopper_jam_test.cpp)
target_include_directories(hopper_jam_test PRIVATE .. ../src)
target_compile_features(hopper_jam_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(hopper_jam_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(hopper_jam_test gtest_main drivers app hal util)
gtest_discover_tests(hopper_jam_test)

add_executable(hopper_noise_test hopper_noise_test.cpp)
target_include_directories(hopper_noise_test PRIVATE .. ../src)
target_compile_features(hopper_noise_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(hopper_noise_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(hopper_noise_test gtest_main drivers app hal util)
gtest_discover_tests(hopper_noise_test)

add_executable(audit_tolerance_test audit_tolerance_test.cpp)
target_include_directories(audit_tolerance_test PRIVATE .. ../src)
target_compile_features(audit_tolerance_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(audit_tolerance_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(audit_tolerance_test gtest_main app drivers hal util)
gtest_discover_tests(audit_tolerance_test)

add_executable(audit_sensor_stuck_test audit_sensor_stuck_test.cpp)
target_include_directories(audit_sensor_stuck_test PRIVATE .. ../src)
target_compile_features(audit_sensor_stuck_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(audit_sensor_stuck_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(audit_sensor_stuck_test gtest_main app drivers hal util)
gtest_discover_tests(audit_sensor_stuck_test)

add_executable(audit_skip_test audit_skip_test.cpp)
target_include_directories(audit_skip_test PRIVATE .. ../src)
target_compile_features(audit_skip_test PRIVATE cxx_std_17)
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  target_compile_options(audit_skip_test PRIVATE -Wall -Wextra -Wpedantic -O2 -g)
endif()
target_link_libraries(audit_skip_test gtest_main app drivers hal util)
gtest_discover_tests(audit_skip_test)
